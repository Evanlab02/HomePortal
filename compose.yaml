name: home-portal

services:
  ### Reverse Proxy
  web:
    container_name: hp-web
    build:
      context: .
      dockerfile: web/Dockerfile
    volumes:
      - ./web/Caddyfile:/etc/caddy/Caddyfile
    ports:
      - 80:80
      - 443:443
      - 8000:8000
    networks:
      - hp-network
    restart: unless-stopped

  ### Front-ends
  flame:
    image: pawelmalak/flame:2.3.1
    container_name: hp-flame
    volumes:
      - hp-flame-data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - hp-network

  your-spotify-client:
    image: yooooomi/your_spotify_client:1.12.0
    container_name: hp-your-spotify-client
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - hp-network
    labels:
      - flame.type=application
      - flame.name=Your Spotify
      - flame.url=https://spotify.portal.tech
      - flame.icon=spotify

  excalidraw:
    image: excalidraw/excalidraw:latest
    container_name: hp-excalidraw
    restart: unless-stopped
    networks:
      - hp-network
    labels:
      - flame.type=application
      - flame.name=Excalidraw
      - flame.url=https://draw.portal.tech
      - flame.icon=draw

  yacht:
    image: selfhostedpro/yacht:latest
    container_name: hp-yacht
    restart: unless-stopped
    networks:
      - hp-network
    volumes:
      - hp-yacht-data:/config
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - flame.type=application
      - flame.name=Yacht
      - flame.url=https://manage.portal.tech
      - flame.icon=docker

  ### APIs
  actual-server:
    image: docker.io/actualbudget/actual-server:latest
    container_name: hp-actual-server
    volumes:
      - hp-actual-data:/data
    healthcheck:
      test: ['CMD-SHELL', 'node src/scripts/health-check.js']
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: unless-stopped
    networks:
      - hp-network
    labels:
      - flame.type=application
      - flame.name=Actual Budget
      - flame.url=https://budget.portal.tech
      - flame.icon=cash-multiple

  your-spotify-server:
    image: yooooomi/your_spotify_server:1.12.0
    container_name: hp-your-spotify-server
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - hp-network

  immich-server:
    container_name: hp-immich-server
    image: ghcr.io/immich-app/immich-server:v1.129.0
    volumes:
      - ${IMMICH_UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - REDIS_HOSTNAME=redis-immich
      - DB_HOSTNAME=postgres-immich
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_DATABASE_NAME=${IMMICH_DB_DATABASE_NAME}
    depends_on:
      - redis-immich
      - postgres-immich
    restart: always
    healthcheck:
      disable: false
    networks:
      - hp-network
    labels:
      - flame.type=application
      - flame.name=Immich
      - flame.url=https://images.portal.tech
      - flame.icon=camera

  immich-ml:
    container_name: hp-immich-ml
    image: ghcr.io/immich-app/immich-machine-learning:v1.129.0
    volumes:
      - immich-ml-cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false
    networks:
      - hp-network

  pihole:
    container_name: hp-pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "9999:80"
    environment:
      TZ: 'Africa/Johannesburg'
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD}
      FTLCONF_dns_listeningMode: 'all'
    volumes:
      - 'hp-pihole-data:/etc/pihole'
    restart: unless-stopped
    networks:
      - hp-network
    labels:
      - flame.type=application
      - flame.name=Pihole
      - flame.url=https://dns.portal.tech/admin/
      - flame.icon=network

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: hp-flaresolverr
    ports:
      - 8191:8191
    restart: unless-stopped
    networks:
      - hp-network

  ### Caches
  redis-immich:
    image: docker.io/redis:6.2-alpine@sha256:148bb5411c184abd288d9aaed139c98123eeb8824c5d3fce03cf721db58066d8
    container_name: hp-redis-immich
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - hp-network

  ### DBs
  postgres-immich:
    container_name: hp-postgres-immich
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - hp-immich-database-data:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    restart: always
    networks:
      - hp-network

  mongo-6:
    image: mongo:6.0.21-jammy
    container_name: hp-mongo-6
    volumes:
      - hp-mongo-6-data:/data/db
    restart: unless-stopped
    networks:
      - hp-network

  fromcord:
    image: ghcr.io/evanlab02/fromcord:0.1.1
    container_name: hp-fromcord
    volumes:
      - ./data/fromcord:/app/data
    restart: unless-stopped
    networks:
      - hp-network

volumes:
  hp-flame-data:
    external: false
  hp-mongo-6-data:
    external: false
  hp-actual-data:
    external: false
  hp-immich-database-data:
    external: false
  immich-ml-cache:
    external: false
  hp-pihole-data:
    external: false
  hp-yacht-data:
    external: false

networks:
  hp-network:
    driver: bridge
