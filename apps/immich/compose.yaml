services:
  immich-server:
    container_name: hp-immich-server
    image: ghcr.io/immich-app/immich-server:v1.129.0
    volumes:
      - ${IMMICH_UPLOAD_LOCATION}:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      - REDIS_HOSTNAME=redis-immich
      - DB_HOSTNAME=postgres-immich
      - DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - DB_USERNAME=${IMMICH_DB_USERNAME}
      - DB_DATABASE_NAME=${IMMICH_DB_DATABASE_NAME}
    env_file:
      - .env
    depends_on:
      - redis-immich
      - postgres-immich
    restart: always
    healthcheck:
      disable: false
    networks:
      - hp-network
    labels:
      - flame.type=application
      - flame.name=Immich
      - flame.url=https://images.labuschagne.xyz
      - flame.icon=camera
    ports:
      - 8906:2283
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 4096M


  immich-ml:
    container_name: hp-immich-ml
    image: ghcr.io/immich-app/immich-machine-learning:v1.129.0
    volumes:
      - immich-ml-cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false
    networks:
      - hp-network
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 2048M

  redis-immich:
    image: docker.io/redis:6.2-alpine@sha256:148bb5411c184abd288d9aaed139c98123eeb8824c5d3fce03cf721db58066d8
    container_name: hp-redis-immich
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - hp-network
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  postgres-immich:
    container_name: hp-postgres-immich
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    environment:
      POSTGRES_PASSWORD: ${IMMICH_DB_PASSWORD}
      POSTGRES_USER: ${IMMICH_DB_USERNAME}
      POSTGRES_DB: ${IMMICH_DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - hp-immich-database-data:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: always
    networks:
      - hp-network
    logging:
      driver: gelf
      options:
        gelf-address: "udp://localhost:12201"
        tag: "{{.Name}}"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

volumes:
  immich-ml-cache:
    external: false
  hp-immich-database-data:
    external: false
